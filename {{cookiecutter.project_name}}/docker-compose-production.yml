version: '3.9'

services:
  db:
    image: postgres:14
    container_name: postgres
    restart: always
    ports:
      - '5432:5432'
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - web

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4
    restart: always
    ports:
      - '5050:80'
    env_file:
      - .env
  
  web:
    build:
      context: .
      dockerfile: docker/Dockerfile-production
    container_name: django-web
    command: >
      sh -c 'python manage.py makemigrations &&
             python manage.py migrate &&
             gunicorn user_service.wsgi:application -b 0.0.0.0:8000'
    restart: always
    ports:
      - '8000:8000'
    env_file:
      - .env
    depends_on:
      - db
    networks:
      - web
  {%- if cookiecutter.use_celery == 'y' %}

  celery-worker:
    build:
      context: .
    command: celery -A {{cookiecutter.project_slug}} worker --loglevel=info
    env_file:
      - .env
    depends_on:
      - web
    networks:
      - web

  celery-beat:
    build:
      context: .
    command: celery -A {{cookiecutter.project_slug}} beat --loglevel=info
    env_file:
      - .env
    depends_on:
      - web
    networks:
      - web

  flower:
    image: mher/flower
    command: celery -A {{cookiecutter.project_slug}} flower
    ports:
      - '5555:5555'
    depends_on:
      - celery-worker
    networks:
      - web
  {%- endif %}

volumes:
  postgres_data:

networks:
  web:
